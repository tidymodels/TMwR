on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: bookdown

env:
  isExtPR: ${{ github.event.pull_request.head.repo.fork == true }}

jobs:
  build:
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
    runs-on: macOS-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Setup R
        id: install-r
        uses: r-lib/actions/setup-r@v1

      - name: Setup pandoc
        uses: r-lib/actions/setup-pandoc@v1

      - name: Install pak and query dependencies
        run: |
          install.packages("pak", repos = "https://r-lib.github.io/p/pak/dev/")
          saveRDS(pak::local_dev_deps_tree(), ".github/r-depends.rds")
        shell: Rscript {0}

      - name: Cache R packages
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-${{ hashFiles('.github/r-depends.rds') }}
          restore-keys: ${{ runner.os }}-${{ steps.install-r.outputs.installed-r-version }}-1-

      - name: Install dependencies
        run: |
          pak::local_install_dev_deps(upgrade = TRUE)
        shell: Rscript {0}
        
      - name: Install system dependencies
        run: |
          brew install --cask xquartz
          brew install pkg-config cairo
          brew install v8
          brew install libgit2
          brew install ffmpeg

      - name: Configure Git user
        run: |
          git config --local user.name "$GITHUB_ACTOR"
          git config --local user.email "$GITHUB_ACTOR@users.noreply.github.com"
          
      - name: Build site
        run: Rscript -e 'bookdown::render_book("index.Rmd", quiet = TRUE)'

      - name: Deploy to Netlify
        if: contains(env.isExtPR, 'false')
        id: netlify-deploy
        uses: nwtgck/actions-netlify@v1.1
        with:
          publish-dir: './_book'
          production-branch: main
          github-token: ${{ secrets.GITHUB_TOKEN }}
          deploy-message:
            'Deploy from GHA: ${{ github.event.pull_request.title || github.event.head_commit.message }} (${{ github.sha }})'
          enable-pull-request-comment: false
          enable-commit-comment: false
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 1
